#!/usr/bin/env bash

[[ -n "${DEBUG}" ]] && set -x
set -eo pipefail

KCNF_DIR="${KCNF_DIR:-$HOME/.kube/configs}"
KCNF_VERBOSE="${KCNF_VERBOSE:-true}"
KCNF_SUBSHELL="${KCNF_SUBSHELL:-true}"
KCNF_HEIGHT="${KCNF_HEIGHT:-40%}"

### show help message and exit
# arg: none
show_help() {
  cat << EOF | bat --style=plain --language="man"
kubectl cnf helps switch between current-contexts in multiple kubeconfigs

Usage:
  kubectl cnf [-h] [<string>]

Flags:
  -h, --help    show this message
EOF
  exit 0
}

### ensure that dependencies are installed
# arg: none
check_requirements() {
  hash fzf bat || err "some dependencies are missing"
}

### show error message and exit
# arg: $1 - text
err() {
  echo "ðŸ®² error: $1" >&2
  exit 1
}

main() {
  local kubeconfigs selected_kubeconfig

  check_requirements
  [[ "$1" =~ ^(-h|--help)$ ]] && show_help

  [[ -d "${KCNF_DIR}" ]] || err "directory does not exist: ${KCNF_DIR}"
  kubeconfigs=$(find "${KCNF_DIR}" \( -type f -o -type l \) -exec awk '/^current-context:/ {print FILENAME, $2}' {} +)
  [[ -n "${kubeconfigs}" ]] || err "no valid kubeconfigs found in directory: ${KCNF_DIR}"

  selected_kubeconfig=$(sort -k2 <<< "${kubeconfigs}" | fzf \
    --height="${KCNF_HEIGHT}" \
    --layout=reverse \
    --with-nth=2 \
    --query="${*:-}" \
    --bind="tab:toggle-preview" \
    --preview="bat --style=header --color=always --language=yaml {1}" \
    --preview-window="hidden,wrap,75%")

  export KUBECONFIG="${selected_kubeconfig%% *}"

  if [[ "${KCNF_SUBSHELL}" != "true" ]]; then
    echo "export KUBECONFIG='${KUBECONFIG}'"
    exit 0
  fi

  export KUBECONTEXT="${selected_kubeconfig##* }"

  [[ "${KCNF_VERBOSE}" == "true" ]] && echo "â‡² entered subshell with context: ${KUBECONTEXT}"

  "${SHELL}"

  [[ "${KCNF_VERBOSE}" == "true" ]] && echo "â‡± exited subshell with context: ${KUBECONTEXT}"

  exit 0
}

main "$@"
