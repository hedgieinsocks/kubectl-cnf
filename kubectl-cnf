#!/usr/bin/env bash

[[ -n "${DEBUG}" ]] && set -x
set -eo pipefail

KCNF_VERSION="v0.0.7"
KCNF_DIR="${KCNF_DIR:-${HOME}/.kube/configs}"
KCNF_HEIGHT="${KCNF_HEIGHT:-40%}"

DEPENDENCIES=(fzf bat)

### show plugin version and exit
# arg: none
show_version() {
  echo "kubectl cnf version ${KCNF_VERSION}"
  exit 0
}

### show help message and exit
# arg: none
show_help() {
  cat << EOF | bat --style=plain --language=man
kubectl cnf helps switch between current-contexts in multiple kubeconfigs

Usage:
  kubectl cnf [-h] [<string>]

Flags:
  -h, --help        show this message
  -v, --version     show plugin version

Dependencies:
  fzf - https://github.com/junegunn/fzf
  bat - https://github.com/sharkdp/bat

Prerequisites:
  directory '${KCNF_DIR}' populated with kubeconfig files
EOF
  exit 0
}

### ensure that dependencies are installed
# arg: none
check_requirements() {
  local dep

  for dep in "${DEPENDENCIES[@]}"; do
    hash "${dep}" 2>/dev/null || err "missing core dependency: ${dep}"
  done
}

### show error message and exit
# arg: $1 - text
err() {
  echo "ðŸ®² error: $1" >&2
  exit 1
}

### copy kubeconfig export command to clipboard
# arg: none
copy_to_clipboard() {
  local platform clipboard_cmd

  platform=$(uname)
  case "${platform}" in
    Linux)  case "${XDG_SESSION_TYPE:-x11}" in
              x11)     clipboard_cmd=("xsel" "--clipboard")                                  ;;
              wayland) clipboard_cmd=("wl-copy")                                             ;;
              *)       err "clipboard copy is not supported on session: ${XDG_SESSION_TYPE}" ;;
            esac
            ;;
    Darwin) clipboard_cmd=("pbcopy")
            ;;
    *)      err "clipboard copy is not supported on platform: ${platform}"
            ;;
  esac

  hash "${clipboard_cmd[0]}" 2>/dev/null || err "missing clipboard dependency: ${clipboard_cmd[0]}"
  echo -n "${EXPORT_COMMAND}" | "${clipboard_cmd[@]}"
}

main() {
  local kubeconfigs selected_kubeconfig

  check_requirements
  [[ " $* " =~ ( -h | --help ) ]] && show_help
  [[ " $* " =~ ( -v | --version ) ]] && show_version

  [[ -d "${KCNF_DIR}" ]] || err "directory does not exist: ${KCNF_DIR}"
  kubeconfigs=$(find "${KCNF_DIR}" \( -type f -o -type l \) -exec awk '/^current-context:/ {print FILENAME, $2}' {} +)
  [[ -n "${kubeconfigs}" ]] || err "no valid kubeconfigs found in directory: ${KCNF_DIR}"

  selected_kubeconfig=$(sort --key=2 <<< "${kubeconfigs}" | fzf \
    --height="${KCNF_HEIGHT}" \
    --layout=reverse \
    --with-nth=2 \
    --query="${*:-}" \
    --bind="tab:toggle-preview" \
    --preview="{ echo '# {1}'; kubectl config view --kubeconfig {1}; } | bat --style=plain --color=always --language=yaml" \
    --preview-window="hidden,wrap,75%")

  export KUBECONFIG="${selected_kubeconfig%% *}"
  export KUBECONTEXT="${selected_kubeconfig##* }"

  if [[ -n "${KCNF_NO_SHELL}" || -n "${KCNF_COPY_CLIP}" || -n "${KCNF_SYMLINK}" ]]; then
    [[ -n "${KCNF_NO_VERBOSE}" ]] || echo "â®º ${KUBECONTEXT}"
  fi

  if [[ -n "${KCNF_NO_SHELL}" ||  -n "${KCNF_COPY_CLIP}" ]]; then
    EXPORT_COMMAND="export KUBECONFIG='${KUBECONFIG}'"
  fi

  if [[ -n "${KCNF_NO_SHELL}" ]]; then
    echo "${EXPORT_COMMAND}"
    return
  fi

  if [[ -n "${KCNF_COPY_CLIP}" ]]; then
    copy_to_clipboard
    return
  fi

  if [[ -n "${KCNF_SYMLINK}" ]]; then
    ln --symbolic --force "${KUBECONFIG}" ~/.kube/config
    return
  fi

  [[ -n "${KCNF_NO_VERBOSE}" ]] || echo "â‡² ${KUBECONTEXT}"
  "${SHELL}" || true
  [[ -n "${KCNF_NO_VERBOSE}" ]] || echo "â‡± ${KUBECONTEXT}"
}

main "$@"
